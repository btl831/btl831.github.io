{"version":3,"sources":["AlertSong.js","Slider.js","Google_login.js","Write.js","Community.js","Recommend.js","Developer.js","Chart.js","App.js","google/serviceWorkerRegistration.js","google/reportWebVitals.js","index.js","App.module.css","Slider.module.css","AlertSong.module.css"],"names":["InfoModal","props","useState","show","setShow","handleClose","handleShow","useMediaQuery","query","href","rel","integrity","crossorigin","Button","className","variant","onClick","Modal","onHide","size","backdrop","centered","Body","id","styles","smPlayerWrapper","url","pick_song","link","reactPlayer","width","height","playing","controls","style","Image","src","image","marginLeft","thumbnail","Alert","title","singer","Footer","playerWrapper","songinfo","Slider","isMobile","isTablet","chart_info","Object","values","dataList","randCheck","cnt","rand","Math","floor","random","length","indexOf","push","JSON","stringify","randSongs","useRef","page","changePage","smInitCard","smLeftCard","smRightCard","smCards","direction","useEffect","gsap","fromTo","current","y","opacity","duration","scaleX","scaleY","x","mdInitCard1","mdInitCard2","mdLeftCard1","mdRightCard1","mdLeftCard2","mdRightCard2","mdFirstCards","mdAction1","mdSecondCards","mdAction2","initCard1","initCard2","initCard3","leftCard1","rightCard1","leftCard2","rightCard2","leftCard3","rightCard3","firstCards","action1","secondCards","action2","thirdCards","action3","exceptionBtn","smEx","param","set","lgEx","window","innerWidth","slider","smbtn","smcard","ref","Deck","song","btn","parse","Card","card","cardimg","Title","Text","GoogleButton","onSocial","onSuccess","response","a","console","log","googleId","profileObj","email","name","socialId","socialType","nickname","clientId","responseType","onFailure","error","WritePage","InputGroup","FormControl","as","onclick","Community","ListGroup","Item","Recommend","Figure","alt","Caption","Developer","ChartPage","setPage","items","nowSong","setNowSong","clicker","setClicker","Chart","number","Pagination","active","paginationBasic","CSSTransition","in","classNames","timeout","PlayBox","slice","Table","striped","bordered","hover","map","i","App","history","useHistory","loading","setLoading","setChart_info","document","querySelector","innerHTML","axios","get","then","result","data","catch","Spinner","animation","content","sticky","Container","Navbar","bg","Brand","Nav","Link","exact","path","position","space","wrapper","index","box","top100","to","undefined","subCommunity","goBack","location","color","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","module","exports"],"mappings":"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","file":"static/js/main.7dd4590f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Alert, Modal, Button, Image } from 'react-bootstrap';\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport ReactPlayer from \"react-player\";\r\nimport styles from './AlertSong.module.css';\r\n\r\nexport default function InfoModal(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  \r\n  const isMobile = useMediaQuery({\r\n    query : \"(max-width:767px)\"\r\n  });\r\n\r\n  if(isMobile) {\r\n    return (\r\n      <>\r\n      <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU\" crossorigin=\"anonymous\"></link>\r\n        <Button className=\"nextButton\" variant=\"secondary\" onClick={handleShow}>\r\n          Go\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose} size=\"xl\" backdrop=\"static\" centered>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n            \r\n          <Modal.Body>\r\n            <div className = \"row\">\r\n              <div className=\"row\" id={styles.smPlayerWrapper}>\r\n                <ReactPlayer\r\n                  url = {props.pick_song.link}\r\n                  className = {styles.reactPlayer}\r\n                  width = '100%'\r\n                  height = '100%'\r\n                  playing\r\n                  controls = {true}\r\n                />\r\n              </div>\r\n              <div className=\"row\" style={{height:\"20px\"}}/>\r\n              <hr/>\r\n              <div className=\"row\">\r\n                <div>\r\n                  <Image src={props.pick_song.image} style={{width:\"80%\", marginLeft:\"55px\"}} thumbnail />\r\n                  <hr/>\r\n                  <Alert variant=\"secondary\" style={{marginLeft:\"20px\"}}>제목 : {props.pick_song.title}</Alert>\r\n                  <Alert variant=\"secondary\" style={{marginLeft:\"20px\"}}>가수 : {props.pick_song.singer}</Alert>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <>\r\n      <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU\" crossorigin=\"anonymous\"></link>\r\n        <Button className=\"nextButton\" variant=\"secondary\" onClick={handleShow}>\r\n          Go\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose} size=\"xl\" backdrop=\"static\" centered>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n            \r\n          <Modal.Body>\r\n            <div className = \"row\">\r\n              <div className=\"col-md-7\" id={styles.playerWrapper}>\r\n                <ReactPlayer\r\n                  url = {props.pick_song.link}\r\n                  className = {styles.reactPlayer}\r\n                  width = '100%'\r\n                  height = '100%'\r\n                  playing\r\n                  controls = {true}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-5\">\r\n                <div id={styles.songinfo}>\r\n                  <Image src={props.pick_song.image} thumbnail />\r\n                  <hr/>\r\n                  <Alert variant=\"secondary\">제목 : {props.pick_song.title}</Alert>\r\n                  <Alert variant=\"secondary\">가수 : {props.pick_song.singer}</Alert>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Image, Card, Button } from 'react-bootstrap';\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { gsap } from 'gsap'\r\n\r\nimport AlertSong from \"./AlertSong\";\r\nimport styles from \"./Slider.module.css\"\r\n\r\nexport default function Slider(props) {\r\n    /* display size check */\r\n    const isMobile = useMediaQuery({\r\n        query : \"(max-width:767px)\"\r\n    });\r\n    const isTablet = useMediaQuery({\r\n        query : \"(min-width:768px) and (max-width:1199px)\"\r\n    });\r\n\r\n\r\n    /* pick random song */\r\n    const NUM = 8;\r\n    let chart_info = Object.values(props.chart_info);\r\n    let dataList = [], randCheck = [], cnt = 0;\r\n    while(cnt < NUM) {\r\n        let rand = Math.floor(Math.random() * chart_info.length);\r\n        if(randCheck.indexOf(rand) < 0) {\r\n            dataList.push(JSON.stringify(chart_info[rand]));\r\n            randCheck.push(rand);\r\n            cnt++;\r\n        }\r\n    }\r\n    const randSongs = useRef(dataList);         // immutable data\r\n    \r\n    /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Animation - Mobile ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\r\n    const [page, changePage] = useState(0);\r\n\r\n    const smInitCard = useRef(null);\r\n    const smLeftCard = useRef(null), smRightCard = useRef(null);\r\n\r\n    const [smCards, direction] = useState(smInitCard);\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(smInitCard.current, \r\n            { y:-100, opacity:0, duration:2 }, { y:0, opacity:1, duration:1 }\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(smLeftCard.current, \r\n            { scaleX:0, scaleY:0.7, x:-300, opacity:0, duration:2 },\r\n            { scaleX:1, scaleY:1, x:0, opacity:1, duration:1 }\r\n        );\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(smRightCard.current, \r\n            { scaleX:0, scaleY:0.7, x:300, opacity:0, duration:2 },\r\n            { scaleX:1, scaleY:1, x:0, opacity:1, duration:1 }\r\n        );\r\n    }, [page]);\r\n\r\n    /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Animation - Tablet ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\r\n    const mdInitCard1 = useRef(null), mdInitCard2 = useRef(null);\r\n    const mdLeftCard1 = useRef(null), mdRightCard1 = useRef(null);\r\n    const mdLeftCard2 = useRef(null), mdRightCard2 = useRef(null);\r\n\r\n    const [mdFirstCards, mdAction1] = useState(mdInitCard1);\r\n    const [mdSecondCards, mdAction2] = useState(mdInitCard2);\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(mdInitCard1.current,\r\n            { scaleX:0.8, scaleY:0.8, opacity:0, duration:1 },\r\n            { scaleX:1, scaleY:1, opacity:1, duration:1 }\r\n        );\r\n        gsap.fromTo(mdInitCard2.current, \r\n            { scaleX:0.8, scaleY:0.8, opacity:0, duration:1 },\r\n            { scaleX:1, scaleY:1, opacity:1, duration:1 }\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(mdLeftCard1.current, \r\n            { scaleX:0, scaleY:0.7, x:-250, opacity:0, duration:2 },\r\n            { scaleX:1, scaleY:1, x:0, opacity:1, duration:1 }\r\n        );\r\n        gsap.fromTo(mdLeftCard2.current, \r\n            { x:-250,  duration:1}, {x:0, duration:1 }\r\n        );\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(mdRightCard1.current, \r\n            { scaleX:0, scaleY:0.7, x:250, opacity:0, duration:2 },\r\n            { scaleX:1, scaleY:1, x:0, opacity:1, duration:1 }\r\n        );\r\n        gsap.fromTo(mdRightCard2.current, \r\n            { x:250,  duration:1 }, {x:0, duration:1 }\r\n        );\r\n    }, [page]);\r\n\r\n    /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Animation - PC ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\r\n    const initCard1 = useRef(null), initCard2 = useRef(null), initCard3 = useRef(null);\r\n    const leftCard1 = useRef(null), rightCard1 = useRef(null);\r\n    const leftCard2 = useRef(null), rightCard2 = useRef(null);\r\n    const leftCard3 = useRef(null), rightCard3 = useRef(null);\r\n\r\n    const [firstCards, action1] = useState(initCard1);\r\n    const [secondCards, action2] = useState(initCard2);\r\n    const [thirdCards, action3] = useState(initCard3);\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(initCard1.current,\r\n            { scaleX:0.8, scaleY:0.8, y:-100, opacity:0, duration:2 },\r\n            { scaleX:0.8, scaleY:0.8, y:0, opacity:0.7, duration:1 }\r\n        );\r\n        gsap.fromTo(initCard2.current, \r\n            { y:-100, opacity:0, duration:2 },\r\n            { y:0, opacity:1, duration:1 }\r\n        );\r\n        gsap.fromTo(initCard3.current,\r\n            { scaleX:0.8, scaleY:0.8, y:-100, opacity:0, duration:2 },\r\n            { scaleX:0.8, scaleY:0.8, y:0, opacity:0.7, duration:1 }\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(leftCard1.current, \r\n            { scaleX:0, scaleY:0.3, x:-300, opacity:0, duration:2 },\r\n            { scaleX:0.8, scaleY:0.8, x:0, opacity:0.7, duration:1 }\r\n        );\r\n        gsap.fromTo(leftCard2.current, \r\n            { scaleX:0.8, scaleY:0.8, x:-300, opacity:0.7, duration:2 },\r\n            { scaleX:1, scaleY:1, x:0, opacity:1, duration:1 }\r\n        );\r\n        gsap.fromTo(leftCard3.current, \r\n            { scaleX:1, scaleY:1, x:-300, opacity:1, duration:2 },\r\n            { scaleX:0.8, scaleY:0.8, x:0, opacity:0.7, duration:1 }\r\n        );\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(rightCard1.current, \r\n            { scaleX:0, scaleY:0.3, x:300, opacity:0, duration:2 },\r\n            { scaleX:0.8, scaleY:0.8, x:0, opacity:0.7, duration:1 }\r\n        );\r\n        gsap.fromTo(rightCard2.current, \r\n            { scaleX:0.8, scaleY:0.8, x:300, opacity:0.7, duration:2 },\r\n            { scaleX:1, scaleY:1, x:0, opacity:1, duration:1 }\r\n        );\r\n        gsap.fromTo(rightCard3.current, \r\n            { scaleX:1, scaleY:1, x:300, opacity:1, duration:2 },\r\n            { scaleX:0.8, scaleY:0.8, x:0, opacity:0.7, duration:1 }\r\n        );\r\n    }, [page]);\r\n\r\n    /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Exception handling ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\r\n    const exceptionBtn = useRef(null);\r\n    function smEx(param) {\r\n        gsap.set(param.current, \r\n            { scaleX:1, scaleY:1, opacity:1 }\r\n        );\r\n    }\r\n    function lgEx(param) {\r\n        gsap.set(param.current, \r\n            { scaleX:0.8, scaleY:0.8, opacity:0.7 }\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        /* tablet size */\r\n        smEx(mdInitCard1);\r\n        smEx(mdRightCard2);\r\n        smEx(mdLeftCard1);\r\n        smEx(exceptionBtn);\r\n        \r\n        /* pc size */\r\n        lgEx(initCard1);\r\n        lgEx(initCard3);\r\n        lgEx(leftCard1);\r\n        lgEx(leftCard3);\r\n        lgEx(rightCard1);\r\n        lgEx(rightCard3);\r\n    }, [window.innerWidth]);\r\n\r\n    /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Return ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\r\n    /* 페이지 전환 - Mobile */\r\n    function smShowLeft() {\r\n        if(page-1 >= 0) {\r\n            changePage(page-1);\r\n            direction(smLeftCard);\r\n        }\r\n    }\r\n    function smShowRight() {\r\n        if(page+1 < NUM) {\r\n            changePage(page+1);\r\n            direction(smRightCard);\r\n        }\r\n    }\r\n\r\n    /* 이하 모바일 크기일 때 실행 */\r\n    if(isMobile) {\r\n        return (\r\n            <>\r\n            <div className=\"row mt-5\" />\r\n            <div className=\"row mt-5\" id={styles.slider}>\r\n                <div className=\"col-1\">\r\n                    <Button variant=\"dark\" className={styles.smbtn} onClick={smShowLeft}>\r\n                        &lt;\r\n                    </Button>\r\n                </div>\r\n                <div className=\"col-9\" id={styles.smcard} ref={smCards}>\r\n                    <Deck song={randSongs.current[page]}  />\r\n                </div>\r\n                <div className=\"col-1\">\r\n                    <Button variant=\"dark\" className={styles.smbtn} onClick={smShowRight}>\r\n                        &gt;\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <div className=\"row mt-5\" />\r\n            </>\r\n        );\r\n    }\r\n\r\n    /* 페이지 전환 - Tablet */\r\n    function mdShowLeft() {\r\n        if(page-1 >= 0) {\r\n            changePage(page-1);\r\n            mdAction1(mdLeftCard1);\r\n            mdAction2(mdLeftCard2);\r\n        }\r\n    }\r\n    function mdShowRight() {\r\n        if(page+2 == NUM) {\r\n            mdAction1(mdRightCard2);\r\n            mdAction2(mdRightCard1);\r\n            return;\r\n        }\r\n\r\n        if(page+1 < NUM) {\r\n            changePage(page+1);\r\n            mdAction1(mdRightCard2);\r\n            mdAction2(mdRightCard1);\r\n        }\r\n    }    \r\n\r\n    /* 이하 Tablet 크기일 때 실행 */\r\n    if(isTablet) {\r\n        return (\r\n            <>\r\n            <div className=\"row mt-5\" />\r\n            <div className=\"row mt-5\" id={styles.slider}>\r\n                <div className=\"col-md-2\">\r\n                    <Button variant=\"dark\" className={styles.btn} onClick={mdShowLeft}>\r\n                        &lt;\r\n                    </Button>\r\n                </div>\r\n                <div className=\"col-md-4\" ref={mdFirstCards}>\r\n                    <Deck song={randSongs.current[page]}/>\r\n                </div>\r\n                <div className=\"col-md-4\" ref={mdSecondCards}>\r\n                    {page+1 < NUM &&\r\n                        <Deck song={randSongs.current[page+1]}/>\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-2\" ref={exceptionBtn}>\r\n                    <Button variant=\"dark\" className={styles.btn} onClick={mdShowRight}>\r\n                        &gt;\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <div className=\"row mt-5\" />\r\n            </>\r\n        );\r\n    }\r\n\r\n    /* 페이지 전환 - PC */\r\n    function showLeft() {\r\n        if(page-1 >= 0) {\r\n            changePage(page-1);\r\n            action1(leftCard1);\r\n            action2(leftCard2);\r\n            action3(leftCard3);\r\n        }\r\n    }\r\n    function showRight() {\r\n        if(page+1 < NUM) {\r\n            changePage(page+1);\r\n            action1(rightCard3);\r\n            action2(rightCard2);\r\n            action3(rightCard1);\r\n        }\r\n    }  \r\n\r\n    /* 이하 PC 크기일 때 실행 */\r\n    if(!isTablet) {\r\n        return (\r\n            <>\r\n            <div className=\"row mt-5\" />\r\n            <div className=\"row mt-5\" id={styles.slider}>\r\n                <div className=\"col-md-1\">\r\n                    <Button variant=\"dark\" className={styles.btn} onClick={showLeft}>\r\n                        &lt;\r\n                    </Button>\r\n                </div>\r\n                <div className=\"col-md-3\" ref={firstCards}>\r\n                    {page-1 >= 0 &&\r\n                        <Deck song={randSongs.current[page-1]}/>\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-3\" ref={secondCards}>\r\n                    <Deck song={randSongs.current[page]}/>\r\n                </div>\r\n                <div className=\"col-md-3\" ref={thirdCards}>\r\n                    {page+1 < NUM &&\r\n                        <Deck song={randSongs.current[page+1]}/>\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-1\">\r\n                    <Button variant=\"dark\" className={styles.btn} onClick={showRight}>\r\n                        &gt;\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <div className=\"row mt-5\" />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n/* 화면에 띄울 카드 덱 */\r\nfunction Deck(props) {\r\n    let song = JSON.parse(props.song);\r\n    return (\r\n      <Card className={styles.card}>\r\n        <Image className={styles.cardimg} src={song.image} thumbnail/>\r\n        <Card.Body>\r\n            <Card.Title>{song.title}</Card.Title>\r\n            <Card.Text>\r\n                <p>가수 : {song.singer} </p>\r\n            </Card.Text>\r\n            <AlertSong pick_song={song} />\r\n        </Card.Body>\r\n        <br/>\r\n      </Card>\r\n    )\r\n}","// GoogleButton.js\r\n\r\n\r\nimport React from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nconst clientId = \"886745805485-78tj2ngi133qkj1dk2j4bgaauda1qu60.apps.googleusercontent.com\";\r\n\r\nexport default function GoogleButton({ onSocial }){\r\n    const onSuccess = async(response) => {\r\n    \tconsole.log(response);\r\n    \r\n        const { googleId, profileObj : { email, name } } = response;\r\n        \r\n        await onSocial({\r\n            socialId : googleId,\r\n            socialType : 'google',\r\n            email,\r\n            nickname : name\r\n        });\r\n    }\r\n\r\n    const onFailure = (error) => {\r\n        console.log(error);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <GoogleLogin\r\n                clientId={clientId}\r\n                responseType={\"id_token\"}\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\r\n\r\nexport default function WritePage(){\r\n    return(\r\n        <>\r\n        <div className=\"row\">\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text id=\"title\">제목</InputGroup.Text>\r\n                <FormControl\r\n                    aria-label=\"제목\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text id=\"writer\">작성자</InputGroup.Text>\r\n                <FormControl\r\n                    aria-label=\"writer\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                />\r\n            </InputGroup>\r\n            <InputGroup>\r\n                <InputGroup.Text id =\"content\">내용</InputGroup.Text>\r\n                <FormControl as=\"textarea\" aria-label=\"내용\" />\r\n            </InputGroup>\r\n        </div>\r\n        <Button variant=\"secondary\" className=\"mt-8 mr-5\"\r\n            onclick={()=>{\r\n                // 여기에다가 값보내는 메소드 적으면 댐 axios.put\r\n            }}>저장\r\n        </Button>\r\n        </>\r\n    )\r\n}","import { ListGroup } from \"react-bootstrap\"\r\n\r\nexport default function Community() {\r\n    return (\r\n      <ListGroup variant=\"flush\">\r\n        <ListGroup.Item variant=\"secondary\">최근 게시물 1</ListGroup.Item>\r\n        <ListGroup.Item variant=\"secondary\">최근 게시물 2</ListGroup.Item>\r\n        <ListGroup.Item variant=\"secondary\">최근 게시물 3</ListGroup.Item>\r\n        <ListGroup.Item variant=\"secondary\">최근 게시물 4</ListGroup.Item>\r\n      </ListGroup>\r\n    )\r\n  }","import AlertSong from './AlertSong'\r\nimport { Figure } from 'react-bootstrap';\r\n\r\nexport default function Recommend() {\r\n    return (\r\n        <Figure className=\"mt-3\">\r\n            <Figure.Image\r\n            width={180}\r\n            height={180}\r\n            alt=\"180x180\"\r\n            src=\"https://i.ytimg.com/vi/tHmc2mAXZSA/hqdefault.jpg?sqp=-oaymwEcCNACELwBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&rs=AOn4CLDLny-RWs_I2o50OjZfWAA1vyNHRg\"\r\n            \r\n            // 미구현\r\n            onClick = {()=>{<AlertSong />}}\r\n            />\r\n            <Figure.Caption>\r\n                [Playlist] J-POP 입문은 이 밴드로! 2021 요루시카 노래 모음 Yorushika songs ヨルシカ (15곡)\r\n            </Figure.Caption>\r\n        </Figure>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Developer() {\r\n    return(\r\n        <>\r\n        <p>신봉규</p>\r\n        <hr/>\r\n        <p>박찬현</p>\r\n        <hr/>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport AlertSong from './AlertSong.js'\r\nimport { Table, Figure, Pagination, Card, Button } from \"react-bootstrap\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nexport default function ChartPage(props) {\r\n    let [page, setPage] = useState(1);\r\n    let items = [];\r\n    let [nowSong, setNowSong] = useState([]);\r\n    let [clicker, setClicker] = useState(false);\r\n    if (props.chart_info.length < 10)\r\n        return (\r\n            <>\r\n                <Chart chart_info={props.chart_info}></Chart>\r\n            </>\r\n\r\n\r\n        )\r\n    else {\r\n        for (let number = 1; number <= 5; number++) {\r\n            items.push(\r\n                <Pagination.Item key={number} active={number === page} onClick={() => { setPage(number) }}>\r\n                    {number}\r\n                </Pagination.Item>,\r\n            );\r\n        }\r\n        const paginationBasic = (\r\n            <div >\r\n                <Pagination>{items}</Pagination>\r\n            </div>\r\n        );\r\n        return (\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-5\">\r\n                        {/* 아직해결못함 */}\r\n                        <CSSTransition in={clicker} classNames=\"click\" timeout={500}>\r\n                            <PlayBox nowSong={nowSong} setClicker={setClicker} />\r\n                        </CSSTransition>\r\n                    </div>\r\n                    <div className=\"col-sm-7 mt-2\" >\r\n                        <Chart chart_info={props.chart_info.slice(10 * (page - 1), 10 * page)} setNowSong={setNowSong} />\r\n                        {paginationBasic}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\nfunction Chart(props) {\r\n    return (\r\n        <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n                <tr>\r\n                    <th>순위</th>\r\n                    <th>앨범</th>\r\n                    <th>제목</th>\r\n                    <th>가수</th>\r\n                    <th>듣기</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n                {\r\n                    props.chart_info.map((a, i) => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{a.id}</td>\r\n                                <td><Figure.Image src={a.image} width={50} height={50} /></td>\r\n                                <td>{a.title}</td>\r\n                                <td>{a.singer}</td>\r\n                                {props.chart_info.length < 10\r\n                                    ? <td><AlertSong pick_song={a} i={i} /></td>\r\n                                    : <td><Button variant=\"secondary\" onClick={() => { props.setNowSong(a) }}>Listen</Button></td>\r\n                                }\r\n\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nfunction PlayBox(props) {\r\n    useEffect(() => {\r\n        props.setClicker(true);\r\n\r\n    });\r\n    return (\r\n\r\n        <Card style={{ width: '30rem', height: '45rem' }} className=\"j_card mt-5 pt-5 \"  >\r\n\r\n            <Card.Body>\r\n                <ReactPlayer\r\n                    url={props.nowSong.link}\r\n                    className=\"react-player\"\r\n                    width='95%'\r\n                    height='50%'\r\n                    playing\r\n                    controls={true}\r\n                />\r\n                <Card.Title>{props.nowSong.title}</Card.Title>\r\n                <Card.Text>\r\n                    <p>{props.nowSong.singer} </p>\r\n                </Card.Text>\r\n\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\n// 들었던 노래 재생목록 추가 히스토리 미구현\r\nfunction HistoryMusic(props) {\r\n\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Navbar, Container, Table, Figure, Spinner, Nav } from 'react-bootstrap';\r\nimport { Link, Route, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './App.css';\r\nimport styles from './App.module.css'\r\nimport Slider from './Slider';\r\nimport AlertSong from './AlertSong.js'\r\nimport GoogleButton from './Google_login';\r\nimport WritePage from './Write';\r\nimport Community from './Community';\r\nimport Recommend from './Recommend';\r\nimport Developer from './Developer';\r\nimport ChartPage from './Chart';\r\n\r\n\r\nfunction App() {\r\n  let history = useHistory();\r\n  let [loading, setLoading] = useState(true);\r\n  let [chart_info, setChart_info] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const htmlTitle = document.querySelector(\"title\");\r\n    htmlTitle.innerHTML = \"MOUM\";\r\n\r\n    axios.get(\"https://btl831.github.io/example.json\")\r\n      .then((result) => { console.log(result.data); setChart_info(result.data); setLoading(false) })\r\n      .catch();\r\n  }, []);\r\n\r\n  // 로딩 UI 더 좋은거 사용하자\r\n  if (loading) return (<>로딩중 <Spinner animation=\"border\" variant=\"primary\" className=\"spinner\" /></>);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <head>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css\"\r\n          integrity=\"srgb(255, 254, 253)MpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We\"\r\n          crossorigin=\"anonymous\"\r\n        />\r\n      </head>\r\n\r\n      {/* navbar */}\r\n      <div className={styles.sticky}>\r\n        <Container>\r\n          <Navbar bg=\"dark\" variant=\"dark\" style={{ height:\"62px\" }}>\r\n              <Navbar.Brand href=\"/\" >\r\n                <img\r\n                  alt=\"MOUM\"\r\n                  src=\"/logo.png\"\r\n                  height=\"50px\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"me-auto\">\r\n                <Nav.Link href=\"/chart\">TOP 100</Nav.Link>\r\n                <Nav.Link href=\"/write\">Write</Nav.Link>\r\n              </Nav>\r\n              <GoogleButton />\r\n          </Navbar>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* main page */}\r\n      <body className=\"body\">\r\n        <Container>\r\n          <Route exact path=\"/\">\r\n            <div className=\"row\" style={{height:\"100px\"}} />\r\n            <div className=\"row\">\r\n              <Slider chart_info={chart_info} />\r\n            </div>\r\n            <div className=\"row\" style={{height:\"200px\"}} />\r\n\r\n            {/* 가수별 Playlist */}\r\n            <div className=\"row\" style={{position:\"relative\"}}>\r\n              {/* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ SPACE ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */}\r\n              <div className={styles.space} />\r\n              <div className=\"row\" style={{height:\"100px\"}} />\r\n              <div className=\"row\" id={styles.wrapper}>\r\n                <div className=\"col-md-5\" id={styles.index}>\r\n                  <hr />\r\n                  <h5>가수별 Playlist</h5>\r\n                  <hr />\r\n                  <div className=\"row mt-5\">\r\n                    <div className=\"col-sm-1 col-md-2\" />\r\n                    <div className=\"col-sm-5 col-md-4\" id={styles.box}>\r\n                      <Recommend />\r\n                    </div>\r\n                    <div className=\"col-sm-5 col-md-4\" id={styles.box}>\r\n                      <Recommend />\r\n                    </div>\r\n                    <div className=\"col-sm-1 col-md-2\" />\r\n                  </div>\r\n                  \r\n                  <div className=\"row\">\r\n                  <div className=\"col-sm-1 col-md-2\" />\r\n                    <div className=\"col-sm-5 col-md-4\" id={styles.box}>\r\n                      <Recommend />\r\n                    </div>\r\n                    <div className=\"col-sm-5 col-md-4\" id={styles.box}>\r\n                      <Recommend />\r\n                    </div>\r\n                    <div className=\"col-sm-1 col-md-2\" />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* TOP 100 */}\r\n                <div className=\"col-md-5 mt-5\" id={styles.index}>\r\n                  <div className=\"row mt-4\">\r\n                    <div className=\"col-sm-10 col-md-10\">\r\n                      <h5 className={styles.top100}>TOP 100</h5>\r\n                    </div>\r\n                    <div className=\"col-sm-2 col-md-2\">\r\n                      <Link to=\"/chart\">\r\n                        <button className={styles.btn}>\r\n                          <h2>&gt;</h2>\r\n                        </button>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-2\">\r\n                    <ChartPage chart_info={chart_info.slice(undefined, 5)} />\r\n                  </div>\r\n                  <div className=\"row\" style={{ height:\"100px\"}} />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\" style={{ height:\"100px\" }}>\r\n                <div className=\"col-md-1\" />\r\n                <div className=\"col-md-10\"><hr/></div>\r\n                <div className=\"col-md-1\" />\r\n              </div>\r\n\r\n              {/* 추가요청 게시판 */}\r\n              <div className=\"row\" id={styles.wrapper}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-4 col-md-3\" />\r\n                  <div className=\"col-sm-4 col-md-6\" >\r\n                    <h3>요청 게시판</h3>\r\n                  </div>\r\n                  <div className=\"col-sm-4 col-md-3\">\r\n                    <Link to=\"/write\">\r\n                      <Button>글쓰기</Button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\" >\r\n                  <div className=\"col-md-1\" />\r\n                  <div className=\"col-md-3 mt-3\">\r\n                    <Community />\r\n                  </div>\r\n                  <div className=\"col-md-7 mt-3\" id={styles.subCommunity}>\r\n                    <a>여기에는 상세페이지 내용이 적힐 겁니다.</a>\r\n                  </div>\r\n                  <div className=\"col-md-1\" />\r\n                </div>\r\n                <div className=\"row\" style={{ height:\"100px\"}} />\r\n              </div>\r\n            </div>\r\n          </Route>\r\n        </Container>\r\n\r\n        {/* chart */}\r\n        <Route path=\"/chart\">\r\n          <br />\r\n          <ChartPage chart_info={chart_info} className=\"mt-20 mb-5\" />\r\n        </Route>\r\n\r\n        \r\n        {/* write */}\r\n        <Route path=\"/write\">\r\n          <div className=\"full\">\r\n            <br />\r\n            <WritePage />\r\n            <Button onClick={() => { history.goBack() }}>돌아가기</Button>\r\n          </div>\r\n        </Route>\r\n          \r\n        {/* developer */}\r\n        <Route path=\"/developer\" >\r\n          <div className=\"full\">\r\n            <Developer />\r\n          </div>\r\n        </Route>\r\n        <br /><br /><br />\r\n      </body>\r\n\r\n      {/* footer */}\r\n      <footer className=\"py-4 bg-dark\">\r\n        <div className=\"container\">\r\n          <p className=\"m-0 text-center text-white\">\r\n            Copyright &copy; Btl_831 2021\r\n          </p>\r\n          <a onClick={() => { window.location.href = \"/developer\" }} style={{ color: \"white\" }}> developer</a>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './google/serviceWorkerRegistration';\r\nimport reportWebVitals from './google/reportWebVitals';\r\n\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"index\":\"App_index__34N-j\",\"sticky\":\"App_sticky__OzAnf\",\"subCommunity\":\"App_subCommunity__3hzfW\",\"box\":\"App_box__1apga\",\"top100\":\"App_top100__3NU7K\",\"btn\":\"App_btn__JJD5P\",\"space\":\"App_space__2LQHg\",\"wrapper\":\"App_wrapper__2ooHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smcard\":\"Slider_smcard__2sYOo\",\"card\":\"Slider_card__2n7iO\",\"cardimg\":\"Slider_cardimg__30yGV\",\"btn\":\"Slider_btn__2yyFS\",\"smbtn\":\"Slider_smbtn__1JZJo\",\"slider\":\"Slider_slider__x08-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactPlayer\":\"AlertSong_reactPlayer__Z30kZ\",\"smPlayerWrapper\":\"AlertSong_smPlayerWrapper__3yGx5\",\"playerWrapper\":\"AlertSong_playerWrapper__1AZX8\",\"songinfo\":\"AlertSong_songinfo__3LwDA\"};"],"sourceRoot":""}