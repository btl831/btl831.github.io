{"version":3,"sources":["AlertSong.js","Google_login.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["InfoModal","useState","show","setShow","handleClose","Button","className","variant","onClick","Modal","onHide","centered","Header","closeButton","Title","Body","Footer","window","location","replace","GoogleButton","onSocial","onSuccess","response","a","console","log","googleId","profileObj","email","name","socialId","socialType","nickname","clientId","responseType","onFailure","error","Card_Jumbo","props","Card","style","width","Img","src","Text","Recommend","Figure","Image","height","alt","Caption","Chart","Table","striped","bordered","hover","song","Community","ListGroup","Item","App","수량","차트정보","rel","href","integrity","crossorigin","Navbar","bg","NavDropdown","title","id","Divider","Container","Brand","exact","path","Carousel","Row","map","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.32995d4d.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Modal, Button} from 'react-bootstrap';\n\nexport default function InfoModal() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <>\n      <Button className=\"nextButton\" variant=\"secondary\" onClick={handleShow}>\n        Go Song\n      </Button>\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>여기에 곡 정보를 넣으면 되지 않을까?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={()=>{window.location.replace(\"https://www.youtube.com/watch?v=v7bnOxV4jAc\")} }>\n            Go Listen\n          </Button>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}","// GoogleButton.js\n\n\nimport React from 'react';\nimport GoogleLogin from 'react-google-login';\n\nconst clientId = \"886745805485-78tj2ngi133qkj1dk2j4bgaauda1qu60.apps.googleusercontent.com\";\n\nexport default function GoogleButton({ onSocial }){\n    const onSuccess = async(response) => {\n    \tconsole.log(response);\n    \n        const { googleId, profileObj : { email, name } } = response;\n        \n        await onSocial({\n            socialId : googleId,\n            socialType : 'google',\n            email,\n            nickname : name\n        });\n    }\n\n    const onFailure = (error) => {\n        console.log(error);\n    }\n\n    return(\n        <div>\n            <GoogleLogin\n                clientId={clientId}\n                responseType={\"id_token\"}\n                onSuccess={onSuccess}\n                onFailure={onFailure}/>\n        </div>\n    )\n}\n","import React,{useReducer, useState} from 'react';\nimport { Button, Navbar,NavDropdown,Container,Carousel,Card,Row,Table,ListGroup,Modal,\nFigure } from 'react-bootstrap';\nimport './App.css';\nimport { Link,Route,Switch } from 'react-router-dom';\nimport AlertSong from './AlertSong.js'\nimport GoogleButton from './Google_login';\n\n\nfunction App() {\n\n  let [수량, 수량변경]= useState([1,2,3]);\n  let [차트정보,차트정보변경] = useState(['Save me','BUTTER','c'])\n\n  return (\n    <div className=\"App\">\n      <head>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css\"\n        integrity=\"sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We\"\n        crossorigin=\"anonymous\"\n      />\n      </head>\n\n      {/* navbar */}\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n          <NavDropdown.Divider />\n          <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n        </NavDropdown>\n        <Container>\n          <Navbar.Brand href=\"#home\">\n            <img\n              alt=\"\"\n              src=\"/logo.svg\"\n              width=\"30\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n            />{' '}\n          BTL 831 INTRO\n          </Navbar.Brand>\n          <GoogleButton />\n        </Container>\n      </Navbar>\n      \n      \n      \n      {/* 첫번째 라우트 */}\n      <Route exact path = \"/\">\n        {/* 첫번째 섹션 */}\n        <body className = \"body\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <hr/>\n\n              <Carousel className = \"carousel\">\n                <Carousel.Item>\n                  <Row className=\"justify-content-md-center\">\n                    {\n                      수량.map(function(){\n                        return(<Card_Jumbo />)\n                      })\n                    }\n                    \n                  </Row>\n                </Carousel.Item>\n\n                <Carousel.Item>\n                  <Row className=\"justify-content-md-center\">\n                    {\n                      수량.map(function(){\n                        return(<Card_Jumbo/>)\n                      })\n                    }\n                  </Row>\n                </Carousel.Item>\n                \n              </Carousel>\n            </div>\n            <hr/>\n\n            {/* 두번째 섹션 */}\n            <div className =\"row\">\n              <div className= \"col-md-8 sub_title \">\n                <hr/>\n                <h6 className = \"mt-1\">느낌별 Playlist</h6>\n                <hr/>\n                <Container className=\"row\">\n                <div className = \"col-md-5 box \">\n                    <Recommend/>\n                  </div>\n\n                  <div className=\"col-md-5 box \">\n                    <Recommend/>\n                  </div>\n                </Container>\n              </div>\n\n              <div className = \"col-md-4 \">\n              \n              <h6 className = \"sub_title\">TOP 100</h6>\n              <Chart song={차트정보}/>\n              </div>\n            </div>\n\n\n            {/* 세번째 섹션 */}\n            <div>\n              <hr/>\n              <h2>아직 무엇을 할지 모르는 공간</h2>\n              \n              <textarea style = {{width :\"100%\"}}></textarea>\n              <hr/>\n            </div>\n\n            {/* 네번째 섹션 */}\n            <div className= \"row\">\n              <h3 className=\"sub_title\">추가요청 게시판</h3>\n              \n              <div className = \"col-md-4 mt-2\">\n              <Community></Community>\n\n              </div>\n              <div className = \"col-md-8 mt-2 sub_community\"> \n              <a>여기에는 상세페이지 내용이 적힐 겁니다.</a>\n              </div>\n              \n            </div>\n\n            {/* container 마무리 */}\n            \n          </div>\n    \n          <br/>\n          \n        </body>\n      </Route>\n      \n      <Route path = \"/title\" component = {Card_Jumbo}/>\n\n      {/* footer */}\n      <footer className= \"py-4 bg-dark\">\n        <div className=\"container\">\n          <p className = \"m-0 text-center text-white\">\n            Copyright &copy; <b>Btl_831 2021</b>\n          </p>\n        </div>\n      </footer>\n      \n      \n    </div>\n    \n  );\n}\n\nfunction Card_Jumbo(props){\n  return (\n    <Card style={{ width: '18rem' }} className =\"j_card mt-5\" >\n      <Card.Img variant=\"top\" src=\"/IU.jpg\" className = \"mt-3\"/>\n      <Card.Body>\n        <Card.Title>라일락</Card.Title>\n        <Card.Text>\n          <p>가수 : 아이유 </p>\n          <p>수록곡 : ~~ </p>\n\n        </Card.Text>\n\n        <AlertSong/>\n\n      </Card.Body>\n      \n    </Card>\n  )\n}\n\nfunction Recommend(){\n  return(\n    <Figure className= \"mt-3\">\n      <Figure.Image\n        width={171}\n        height={180}\n        alt=\"171x180\"\n        src=\"/black_pink.jpg\"\n      />\n      <Figure.Caption>\n        오늘은 블랙핑크 노래로 하루를 시작해 봅시다.\n      </Figure.Caption>\n    </Figure>\n  )\n}\n\nfunction Chart(props){\n  return (\n    <Table striped bordered hover variant=\"dark\">\n      <thead>\n        <tr>\n          <th>순위</th>\n          <th>제목</th>\n          <th>가수</th>\n          <th>듣기</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>1</td>\n          <td>{props.song[0]}</td>\n          <td>BTS</td>\n          <td>@mdo</td>\n        </tr>\n        <tr>\n          <td>2</td>\n          <td>{props.song[1]}</td>\n          <td>BTS</td>\n          <td>@fat</td>\n        </tr>\n        \n      </tbody>\n    </Table>\n  )\n}\n\nfunction Community(){\n  return (\n    <ListGroup variant=\"flush\">\n    <ListGroup.Item variant=\"secondary\">Cras justo odio</ListGroup.Item>\n    <ListGroup.Item variant=\"secondary\">Dapibus ac facilisis in</ListGroup.Item>\n    <ListGroup.Item variant=\"secondary\">Morbi leo risus</ListGroup.Item>\n    <ListGroup.Item variant=\"secondary\">Porta ac consectetur ac</ListGroup.Item>\n  </ListGroup>\n  )\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}