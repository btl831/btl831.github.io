{"version":3,"sources":["App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Card_Jumbo","props","Card","style","width","className","Img","variant","src","Body","Title","Text","Button","onClick","클릭변경","클릭","Chart","Table","striped","bordered","hover","song","Community","ListGroup","Item","TitleSong","id","tabindex","role","Modal","Dialog","Header","closeButton","Footer","App","useState","수량","차트정보","rel","href","integrity","crossorigin","Navbar","bg","NavDropdown","title","Divider","Container","Brand","alt","height","Carousel","Row","map","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e42b9e03.chunk.js","sourcesContent":["import React,{useReducer, useState} from 'react';\nimport { Button, Navbar,NavDropdown,Container,Carousel,Card,Row,Table,ListGroup,Modal } from 'react-bootstrap';\nimport './App.css';\n\nfunction App() {\n\n  let [수량, 수량변경]= useState([1,2,3]);\n  let [차트정보,차트정보변경] = useState(['Save me','BUTTER','c'])\n  let [클릭,클릭변경]= useState(false)\n\n  return (\n    <div className=\"App\">\n      <head>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css\"\n        integrity=\"sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We\"\n        crossorigin=\"anonymous\"\n      />\n      </head>\n\n      {/* navbar */}\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n          <NavDropdown.Divider />\n          <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n        </NavDropdown>\n        <Container>\n          <Navbar.Brand href=\"#home\">\n            <img\n              alt=\"\"\n              src=\"/logo.svg\"\n              width=\"30\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n            />{' '}\n          BTL 831 INTRO\n          </Navbar.Brand>\n        </Container>\n      </Navbar>\n\n      {/* 첫번째 섹션 */}\n      <body className = \"body\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <hr/>\n\n            <Carousel className = \"carousel\">\n              <Carousel.Item>\n                <Row className=\"justify-content-md-center\">\n                  {\n                    수량.map(function(){\n                      return(<Card_Jumbo 클릭={클릭} 클릭변경={클릭변경}/>)\n                    })\n                  }\n                  {\n                    클릭 === true\n                    ?<TitleSong/>\n                    :null\n                  }\n                </Row>\n              </Carousel.Item>\n\n              <Carousel.Item>\n                <Row className=\"justify-content-md-center\">\n                  {\n                    수량.map(function(){\n                      return(<Card_Jumbo/>)\n                    })\n                  }\n                </Row>\n              </Carousel.Item>\n              \n            </Carousel>\n          </div>\n          <hr/>\n\n          {/* 두번째 섹션 */}\n          <div className =\"row\">\n            <div className= \"col-md-8 sub_title \">\n              <hr/>\n              <h6 className = \"mt-1\">느낌별 Playlist</h6>\n              <hr/>\n              <Container className=\"row\">\n               <div className = \"col-md-5 box \">\n                  여기에는 추천곡이 들어갈껍니다\n                </div>\n\n                <div className=\"col-md-5 box \">\n                </div>\n              </Container>\n            </div>\n\n            <div className = \"col-md-4 \">\n            \n            <h6 className = \"sub_title\">TOP 100</h6>\n            <Chart song={차트정보}/>\n            </div>\n          </div>\n\n\n          {/* 세번째 섹션 */}\n          <div>\n            <hr/>\n            <h2>아직 무엇을 할지 모르는 공간</h2>\n            \n            <textarea style = {{width :\"100%\"}}></textarea>\n            <hr/>\n          </div>\n\n          {/* 네번째 섹션 */}\n          <div className= \"row\">\n            <h3 className=\"sub_title\">추가요청 게시판</h3>\n            \n            <div className = \"col-md-4 mt-2\">\n            <Community></Community>\n\n            </div>\n            <div className = \"col-md-8 mt-2 sub_community\"> \n            <a>여기에는 상세페이지 내용이 적힐 겁니다.</a>\n            </div>\n            \n          </div>\n\n          {/* container 마무리 */}\n        </div>\n  \n        <br/>\n      </body>\n\n      {/* footer */}\n      <footer className= \"py-4 bg-dark\">\n        <div className=\"container\">\n          <p className = \"m-0 text-center text-white\">\n            Copyright &copy; Bong and chan 2021\n          </p>\n        </div>\n      </footer>\n      \n      \n    </div>\n    \n  );\n}\n\nfunction Card_Jumbo(props){\n  return (\n    <Card style={{ width: '18rem' }} className =\"j_card mt-5\" >\n      <Card.Img variant=\"top\" src=\"holder.js/50px90\" />\n      <Card.Body>\n        <Card.Title>Card Title</Card.Title>\n        <Card.Text>\n          Some quick example text to build on the card title and make up the bulk of\n          the card's content.\n        </Card.Text>\n        <Button variant=\"secondary\" onClick={()=>{props.클릭변경(!props.클릭)}}>Go somewhere</Button>\n      </Card.Body>\n    </Card>\n  )\n}\n\nfunction Chart(props){\n  return (\n    <Table striped bordered hover variant=\"dark\">\n      <thead>\n        <tr>\n          <th>순위</th>\n          <th>제목</th>\n          <th>가수</th>\n          <th>듣기</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>1</td>\n          <td>{props.song[0]}</td>\n          <td>BTS</td>\n          <td>@mdo</td>\n        </tr>\n        <tr>\n          <td>2</td>\n          <td>{props.song[1]}</td>\n          <td>BTS</td>\n          <td>@fat</td>\n        </tr>\n        \n      </tbody>\n    </Table>\n  )\n}\n\nfunction Community(){\n  return (\n    <ListGroup variant=\"flush\">\n    <ListGroup.Item variant=\"secondary\">Cras justo odio</ListGroup.Item>\n    <ListGroup.Item variant=\"secondary\">Dapibus ac facilisis in</ListGroup.Item>\n    <ListGroup.Item variant=\"secondary\">Morbi leo risus</ListGroup.Item>\n    <ListGroup.Item variant=\"secondary\">Porta ac consectetur ac</ListGroup.Item>\n  </ListGroup>\n  )\n  \n}\nfunction TitleSong(){\n  return(\n    <div className =\"modal fade\" id=\"loginModal\" tabindex = \"-1\" role =\"dialog\" aria-labelledby = \"loginModalLabel\"\n    aria-hidden = \"true\">\n    <Modal.Dialog>\n      <Modal.Header closeButton>\n        <Modal.Title>Modal title</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p>Modal body text goes here.</p>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"secondary\">Close</Button>\n        <Button variant=\"primary\">Save changes</Button>\n      </Modal.Footer>\n    </Modal.Dialog>\n    </div>\n  )\n  \n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}